// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc1277.Robot2016.commands;

import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

import org.usfirst.frc1277.Robot2016.OI;
import org.usfirst.frc1277.Robot2016.Robot;

/**
 *
 */
public class Drive extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
	
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
	
	double sensitivity;
	boolean previous4;
	boolean current4;
	boolean previous2;
	boolean current2;
	boolean previous12;
	boolean current12;
	boolean reversed;
	
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public Drive() {
    	
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.driveTrain);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	sensitivity = .50;
    	previous4 = false;
    	current4 = false;
    	previous2 = false;
    	current2 = false;
    	previous12 = false;
    	current12 = false;
    	reversed = false;
    }

    // Called repeatedly when this Command is scheduled to run
	protected void execute() {
    	
    	previous4 = current4;
    	current4 = OI.joystick.getRawButton(4);
    	previous2 = current2;
    	current2 = OI.joystick.getRawButton(2);
    	previous12 = current12;
    	current12 = OI.joystick.getRawButton(12);
    	if (current4 && !previous4 && (sensitivity <= .9)) {
    		sensitivity += .1;
    	} else if (current2 && !previous2 && (sensitivity >= .6)) {
    		sensitivity -= .1;
    	}
    	if (current12 && !previous12) {
    		reversed = !reversed;
    	}
    	if (reversed) {
    		Robot.driveTrain.drive(sensitivity * OI.getJoystick().getRawAxis(1), -sensitivity * OI.getJoystick().getRawAxis(0));
    	} else if (!reversed) {
    		Robot.driveTrain.drive(-1 * sensitivity * OI.getJoystick().getRawAxis(1), -1 * sensitivity * OI.getJoystick().getRawAxis(0));
    	}
    	SmartDashboard.putNumber("Sensitivity: ", sensitivity * 100);
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    protected void end() {
    	Robot.driveTrain.drive(0, 0);
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    	Robot.driveTrain.drive(0, 0);
    }
}
