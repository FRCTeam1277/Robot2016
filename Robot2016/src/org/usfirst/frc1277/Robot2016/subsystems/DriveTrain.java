// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc1277.Robot2016.subsystems;

import org.usfirst.frc1277.Robot2016.RobotMap;
import org.usfirst.frc1277.Robot2016.commands.Drive;

import edu.wpi.first.wpilibj.CameraServer;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;


/**
 *
 */
public class DriveTrain extends Subsystem {
	
    private final RobotDrive robotDrive = RobotMap.driveTrainRobotDrive;
    
    private final Encoder leftEncoder = RobotMap.leftEncoder;
    private final Encoder rightEncoder = RobotMap.rightEncoder;
    
    public final double circumference = Math.PI * 10;
    
//	public final int camBack;
	//public CameraServer server;
    
	public DriveTrain() {		
        //server = CameraServer.getInstance();
        //server.setQuality(60);
        //server.startAutomaticCapture("cam1");
	}
	
    public int getRightEncoder() {
    	return rightEncoder.get();
    }
    
    public void resetRightEncoder() {
    	rightEncoder.reset();
    }
    
    public void drive(double move, double rotate) {
    	robotDrive.arcadeDrive(move, rotate);
		SmartDashboard.putNumber("Right Encoder", rightEncoder.get());
		SmartDashboard.putNumber("Left Encoder", leftEncoder.get());
    }
    
    public void initDefaultCommand() {
    	setDefaultCommand(new Drive());
    }
   
}

